[package]
authors = ['Stract ApS. <hello@trystract.com>']
default-run = "stract"
edition = "2021"
license = "AGPL-3.0-or-later"
name = "stract"
version = "0.1.0"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[features]
cors = []
default = ["cors", "with_alice"]
dev = ["cors"]
prod = ["cors"]
with_alice = []

[[bin]]
name = "stract"
path = "src/main.rs"

[dependencies]
aes-gcm = {workspace = true}
anyhow = {workspace = true}
async-channel = {workspace = true}
async-stream = {workspace = true}
async-trait = {workspace = true}
axum = {workspace = true}
axum-extra = {workspace = true}
axum-macros = {workspace = true}
base64 = {workspace = true}
bincode = {workspace = true}
bitvec = {workspace = true}
bstr.workspace = true
bytemuck = {workspace = true}
byteorder = {workspace = true}
bzip2 = {workspace = true}
chitchat = {workspace = true}
chrono = {workspace = true}
clap = {workspace = true}
crossbeam-channel = {workspace = true}
csv = {workspace = true}
dashmap = {workspace = true}
encoding_rs = {workspace = true}
eventsource-stream = {workspace = true}
fend-core = {workspace = true}
flate2 = {workspace = true}
fst = {workspace = true}
futures = {workspace = true}
half = {workspace = true}
hashbrown = {workspace = true}
http = {workspace = true}
image = {workspace = true}
indicatif = {workspace = true}
itertools = {workspace = true}
kuchiki = {path = "../kuchiki"}
lalrpop-util = {workspace = true}
libc = {workspace = true}
logos = {workspace = true}
lz-str = {workspace = true}
lz4_flex = {workspace = true}
md5 = {workspace = true}
memmap = {workspace = true}
memmap2 = {workspace = true}
mime = {workspace = true}
min-max-heap = {workspace = true}
num_cpus = {workspace = true}
once_cell = {workspace = true}
optics = {path = "../optics"}
parse_wiki_text = {workspace = true}
publicsuffix = {workspace = true}
quick-xml = {workspace = true}
rand = {workspace = true}
rayon = {workspace = true}
regex = {workspace = true}
reqwest = {workspace = true}
reqwest-eventsource = {workspace = true}
ring = {workspace = true}
rio_api = {workspace = true}
rio_turtle = {workspace = true}
rkyv = {workspace = true}
robotstxt-with-cache = {workspace = true}
rocksdb = {workspace = true}
rust-s3 = {workspace = true}
rust-stemmers = {workspace = true}
safetensors = {workspace = true}
scylla = {workspace = true}
serde = {workspace = true}
serde_json = {workspace = true}
serde_urlencoded = {workspace = true}
tantivy = {workspace = true}
tch = {workspace = true}
thiserror = {workspace = true}
tokenizers = {workspace = true}
tokio = {workspace = true}
tokio-stream = {workspace = true}
toml = {workspace = true}
torch-sys = {workspace = true}
tower-http = {workspace = true}
tracing = {workspace = true}
tracing-indicatif = {workspace = true}
tracing-subscriber = {workspace = true}
url = {workspace = true}
urlencoding = {workspace = true}
utoipa = {workspace = true}
utoipa-swagger-ui = {workspace = true}
uuid = {workspace = true}
whatlang = {workspace = true}

[target.'cfg(not(target_env = "msvc"))'.dependencies]
tikv-jemallocator = {workspace = true}

[build-dependencies]
lalrpop = {workspace = true}

[dev-dependencies]
criterion = {workspace = true}
insta = {workspace = true}
maplit = {workspace = true}
proptest = {workspace = true}
proptest-derive = {workspace = true}

[[bench]]
harness = false
name = "search-preindexed"

[[bench]]
harness = false
name = "search-preindexed-optic"

[[bench]]
harness = false
name = "harmonic-centrality"

[[bench]]
harness = false
name = "abstractive-summarizer"

[[bench]]
harness = false
name = "build-similarity"

[[bench]]
harness = false
name = "spell-correction"

[[bench]]
harness = false
name = "similar-sites"

[[bench]]
harness = false
name = "hyperloglog"

[[bench]]
harness = false
name = "naive-bayes"
